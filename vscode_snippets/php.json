{"mdate":{"prefix":"mdate","body":"\\$table->date('${1:date}')$0;","description":"migration date field"},"if":{"prefix":"if","body":["if ($1) {","\t$0","\\}"],"description":"If"},"fun":{"prefix":"fun","body":["public function $1()","{","\t$0","\\}"],"description":"Function"},"@p":{"prefix":"@p","body":["@php","  $0","@endphp"]},"dr":{"prefix":"dr","body":"dump(\\$request->toArray());"},"sfun":{"prefix":"sfun","body":["public static function $1()","{","\t$0","\\}"],"description":"Function"},"muint":{"prefix":"muint","body":"\\$table->unsignedInteger('${1:name}')$0;","description":"migration unsigned integer field"},"mtimestamp":{"prefix":"mtimestamp","body":["\\$table->timestamps();","$0"],"description":"migration timestamps"},"null":{"prefix":"null","body":"->nullable()$0","description":"migration nullable"},"pl":{"prefix":"pl","body":"<?php $1 ?>","description":"expand p to full php"},"mfor":{"prefix":"mfor","body":["\\$table->unsignedInteger('${1:name}');","\\$table->foreign('$1')","\t->references('$2')","\t->on('$3')","\t${4:->onDelete('cascade')}$0;"],"description":"migration foreign"},"mint":{"prefix":"mint","body":"\\$table->integer('${1:quantity}')$0;","description":"migration integer field"},"fillable":{"prefix":"fillable","body":["protected \\$fillable = [","\t$0,","\t];"],"description":"model fillable attribute"},"php":{"prefix":"php","body":["<?php","$0"],"description":"expand p to full php"},"ta":{"prefix":"ta","body":" ->toArray()"},"hc":{"prefix":"hc","body":"<!-- ${1:end of }$0 -->","description":"HTML Comment"},"minc":{"prefix":"minc","body":"\\$table->increments('${1:id}')$0;","description":"migration increments field"},"mtext":{"prefix":"mtext","body":"\\$table->text('${1:name}')$0;","description":"migration text field"},"lrg":{"prefix":"lrg","body":"Route::get(${1:\\$pattern}, ${2:\\$action});","description":"Laravel 4: Route::get()"},"join":{"prefix":"join","body":"->join('$1', '$1.id', '$2')","description":"join"},"def":{"prefix":"def","body":"->default('$1')$0","description":"migration default"},"csrf":{"prefix":"csrf","body":["\/**"," * Prevent cross site script attacks"," *\/","public function __construct()","{","  \\$this->beforeFilter(${1:'csrf', array(${2:'on'=>'post'})});","\\}","$0"],"description":"cross site script attacks"},"psfun":{"prefix":"psfun","body":["private static function $1()","{","\t$0","\\}"],"description":"Function"},"guarded":{"prefix":"guarded","body":["protected \\$guarded = [","\t$0,","\t];"],"description":"model guarded attribute"},"menum":{"prefix":"menum","body":"\\$table->enum('${1:name}', ['${2:options1}', ])$0;","description":"migration enum field"},"pfun":{"prefix":"pfun","body":["private function $1($2)","{","\t$0","\\}"],"description":"Function"},"qfun":{"prefix":"qfun","body":["function (\\$query) {","\t$0","\\}"],"description":"Query Function"},"mbool":{"prefix":"mbool","body":"\\$table->boolean('${1:isTrue}')$0;","description":"migration boolean field"},"ljoin":{"prefix":"ljoin","body":"->join('$1', '$1.id', '=', '$2', 'LEFT OUTER')","description":"left join"},"mstr":{"prefix":"mstr","body":"\\$table->string('${1:name}')$0;","description":"migration string field"},"mdec":{"prefix":"mdec","body":"\\$table->decimal('${1:money}', ${2:12,2})$0;","description":"migration decimal field"},"arr":{"prefix":"arr","body":"array(${1:'on'=>'post'}$2)$0","description":"Create a non-assigned array"},"mfori":{"prefix":"mfori","body":"\\$table->foreignId('$1_id')${2:->nullable()}->constrained();","description":"migration foreignId"}}